<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xbb.mapper.ArticleMapper">
    <!-- 通用查询映射结果 -->
    <resultMap type="com.xbb.entity.Article" id="BaseResultMap">
        <result column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="summary" property="summary"/>
        <result column="user_id" property="userId"/>
        <result column="creat_time" property="creatTime"/>
        <result column="img" property="img"/>
        <result column="article_type_id" property="articleTypeId"/>
        <result column="read_count" property="readCount"/>
        <result column="collect_count" property="collectCount"/>
        <result column="groups_id" property="groupsId"/>
        <result column="status" property="status"/>
        <result column="opinion" property="opinion"/>
        <result column="like_count" property="likeCount"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">id, title, content, summary, user_id, creat_time, img, article_type_id, read_count, collect_count, groups_id, status, opinion, like_count</sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from article
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from article
        where id = #{id}
    </delete>
    <insert id="insert" parameterType="com.xbb.entity.Article">
        insert into article (id, title, content, summary, user_id, creat_time, img, article_type_id, read_count, collect_count, groups_id, status, opinion, like_count)
        values (#{id}, #{title}, #{content}, #{summary}, #{userId}, #{creatTime}, #{img}, #{articleTypeId}, #{readCount}, #{collectCount}, #{groupsId}, #{status}, #{opinion}, #{likeCount})
    </insert>
    <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.xbb.entity.Article">
        insert into article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="title != null">title,</if>
            <if test="content != null">content,</if>
            <if test="summary != null">summary,</if>
            <if test="userId != null">user_id,</if>
            <if test="creatTime != null">creat_time,</if>
            <if test="img != null">img,</if>
            <if test="articleTypeId != null">article_type_id,</if>
            <if test="readCount != null">read_count,</if>
            <if test="collectCount != null">collect_count,</if>
            <if test="groupsId != null">groups_id,</if>
            <if test="status != null">status,</if>
            <if test="opinion != null">opinion,</if>
            <if test="likeCount != null">like_count,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="title != null">#{title},</if>
            <if test="content != null">#{content},</if>
            <if test="summary != null">#{summary},</if>
            <if test="userId != null">#{userId},</if>
            <if test="creatTime != null">#{creatTime},</if>
            <if test="img != null">#{img},</if>
            <if test="articleTypeId != null">#{articleTypeId},</if>
            <if test="readCount != null">#{readCount},</if>
            <if test="collectCount != null">#{collectCount},</if>
            <if test="groupsId != null">#{groupsId},</if>
            <if test="status != null">#{status},</if>
            <if test="opinion != null">#{opinion},</if>
            <if test="likeCount != null">#{likeCount},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xbb.entity.Article">
        update article
        <set>
            <if test="id != null">id = #{id},</if>
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            <if test="summary != null">summary = #{summary},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="creatTime != null">creat_time = #{creatTime},</if>
            <if test="img != null">img = #{img},</if>
            <if test="articleTypeId != null">article_type_id = #{articleTypeId},</if>
            <if test="readCount != null">read_count = #{readCount},</if>
            <if test="collectCount != null">collect_count = #{collectCount},</if>
            <if test="groupsId != null">groups_id = #{groupsId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="opinion != null">opinion = #{opinion},</if>
            <if test="likeCount != null">like_count = #{likeCount},</if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xbb.entity.Article">
        update article
        set id = #{id}, title = #{title}, content = #{content}, summary = #{summary}, user_id = #{userId}, creat_time = #{creatTime}, img = #{img}, article_type_id = #{articleTypeId}, read_count = #{readCount}, collect_count = #{collectCount}, groups_id = #{groupsId}, status = #{status}, opinion = #{opinion}, like_count = #{likeCount}
        where id = #{id}
    </update>


    <resultMap id="ResultMap" extends="BaseResultMap" type="com.xbb.entity.Article">
        <association javaType="com.xbb.entity.User" property="user">
            <result column="t2_name" property="name" />
            <result column="t2_cellphone" property="cellphone" />
            <result column="t2_avatar" property="avatar" />
        </association>
        <association javaType="com.xbb.entity.ArticleType" property="articleType">
            <result column="t3_name" property="name" />
        </association>
        <association javaType="com.xbb.entity.Groups" property="groups">
            <result column="t4_name" property="name" />
        </association>
    </resultMap>

    <select id="selectListByPaging" resultMap="ResultMap">
       select
       t1.*,
       t2.name as t2_name, t2.cellphone as t2_cellphone, t2.avatar as t2_avatar,
       t3.name as t3_name,
       t4.name as t4_name
       from article t1
       left join user t2 on t1.user_id = t2.id
       left join article_type t3 on t1.article_type_id = t3.id
       left join groups t4 on t1.groups_id = t4.id
       <where>
         <if test="title != null and title != ''">
             and t1.title like concat('%', #{title}, '%')
         </if>
         <if test="userId != null">
             and t1.user_id = #{userId}
         </if>
         <if test="articleTypeId != null">
             and t1.article_type_id = #{articleTypeId}
         </if>
         <if test="groupsId != null">
             and t1.groups_id = #{groupsId}
         </if>
         <if test="status != null">
             and t1.status = #{status}
         </if>
       </where>
       order by t1.id desc
       limit #{page}, #{limit}
    </select>

    <select id="selectCountByPaging" resultType="java.lang.Integer">
       select count(*)
       from article t1
       <where>
         <if test="title != null and title != ''">
             and t1.title like concat('%', #{title}, '%')
         </if>
         <if test="userId != null">
             and t1.user_id = #{userId}
         </if>
         <if test="articleTypeId != null">
             and t1.article_type_id = #{articleTypeId}
         </if>
         <if test="groupsId != null">
             and t1.groups_id = #{groupsId}
         </if>
         <if test="status != null">
             and t1.status = #{status}
         </if>
       </where>
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from article
        order by id desc
    </select>

    <select id="selectList" resultMap="BaseResultMap" parameterType="com.xbb.entity.Article">
        select
        <include refid="Base_Column_List" />
        from article
        <where>
          <if test="title != null and title != ''">
              and title like concat('%', #{title}, '%')
          </if>
          <if test="userId != null">
              and user_id = #{userId}
          </if>
          <if test="articleTypeId != null">
              and article_type_id = #{articleTypeId}
          </if>
          <if test="groupsId != null">
              and groups_id = #{groupsId}
          </if>
          <if test="status != null">
              and status = #{status}
          </if>
        </where>
        order by id desc
    </select>

    <select id="selectListByLimit" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from article
        order by ${field} ${sort}
        limit #{limit}
    </select>

    <select id="selectListByField" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from article
        where ${field} = ${value}
        order by id desc
    </select>

    <select id="selectOne" resultMap="BaseResultMap" parameterType="com.xbb.entity.Article">
        select
        <include refid="Base_Column_List" />
        from article
        <where>
          <if test="title != null and title != ''">
              and title like concat('%', #{title}, '%')
          </if>
          <if test="userId != null">
              and user_id = #{userId}
          </if>
          <if test="articleTypeId != null">
              and article_type_id = #{articleTypeId}
          </if>
          <if test="groupsId != null">
              and groups_id = #{groupsId}
          </if>
          <if test="status != null">
              and status = #{status}
          </if>
        </where>
    </select>

    <select id="selectOneByDetails" parameterType="java.lang.Integer" resultMap="ResultMap">
        select
        t1.*,
        t2.name as t2_name, t2.cellphone as t2_cellphone, t2.avatar as t2_avatar,
        t3.name as t3_name,
        t4.name as t4_name
        from article t1
        left join user t2 on t1.user_id = t2.id
        left join article_type t3 on t1.article_type_id = t3.id
        left join groups t4 on t1.groups_id = t4.id
        where t1.id = #{id}
    </select>

    <select id="selectAllCount" resultType="java.lang.Integer">
        select count(*) from article
    </select>

    <select id="selectCount" resultType="java.lang.Integer" parameterType="com.xbb.entity.Article">
        select count(*)
        from article
        <where>
          <if test="title != null and title != ''">
              and title like concat('%', #{title}, '%')
          </if>
          <if test="userId != null">
              and user_id = #{userId}
          </if>
          <if test="articleTypeId != null">
              and article_type_id = #{articleTypeId}
          </if>
          <if test="groupsId != null">
              and groups_id = #{groupsId}
          </if>
          <if test="status != null">
              and status = #{status}
          </if>
        </where>
    </select>

    <update id="updateAll">
        update article
        <if test="title != null">
        set title = #{title}
        </if>
        <if test="userId != null">
        set user_id = #{userId}
        </if>
        <if test="articleTypeId != null">
        set article_type_id = #{articleTypeId}
        </if>
        <if test="groupsId != null">
        set groups_id = #{groupsId}
        </if>
        <if test="status != null">
        set status = #{status}
        </if>
    </update>

    <resultMap id="StatisticsResultMap" type="com.xbb.entity.Statistics">
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="value" jdbcType="INTEGER" property="value" />
    </resultMap>
    <select id="selectStatisticsByType" resultMap="StatisticsResultMap">
      select
      t1.name as name,
      count(t2.article_type_id) as value
      from article_type t1
      left join article t2 on t1.id = t2.article_type_id
      group by t2.article_type_id
      order by t1.id desc
    </select>
    <select id="selectStatisticsByGroups" resultMap="StatisticsResultMap">
      select
      t1.name as name,
      count(t2.groups_id) as value
      from groups t1
      left join article t2 on t1.id = t2.groups_id
      group by t2.groups_id
      order by t1.id desc
    </select>
</mapper>
