<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xbb.mapper.ArticleLikeMapper">
    <!-- 通用查询映射结果 -->
    <resultMap type="com.xbb.entity.ArticleLike" id="BaseResultMap">
        <result column="id" property="id"/>
        <result column="article_id" property="articleId"/>
        <result column="user_id" property="userId"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">id, article_id, user_id</sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from article_like
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from article_like
        where id = #{id}
    </delete>
    <insert id="insert" parameterType="com.xbb.entity.ArticleLike">
        insert into article_like (id, article_id, user_id)
        values (#{id}, #{articleId}, #{userId})
    </insert>
    <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.xbb.entity.ArticleLike">
        insert into article_like
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="articleId != null">article_id,</if>
            <if test="userId != null">user_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="articleId != null">#{articleId},</if>
            <if test="userId != null">#{userId},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xbb.entity.ArticleLike">
        update article_like
        <set>
            <if test="id != null">id = #{id},</if>
            <if test="articleId != null">article_id = #{articleId},</if>
            <if test="userId != null">user_id = #{userId},</if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xbb.entity.ArticleLike">
        update article_like
        set id = #{id}, article_id = #{articleId}, user_id = #{userId}
        where id = #{id}
    </update>


    <resultMap id="ResultMap" extends="BaseResultMap" type="com.xbb.entity.ArticleLike">
        <association javaType="com.xbb.entity.Article" property="article">
            <result column="t2_title" property="title" />
        </association>
        <association javaType="com.xbb.entity.User" property="user">
            <result column="t3_name" property="name" />
            <result column="t3_cellphone" property="cellphone" />
            <result column="t3_avatar" property="avatar" />
        </association>
    </resultMap>

    <select id="selectListByPaging" resultMap="ResultMap">
       select
       t1.*,
       t2.title as t2_title,
       t3.name as t3_name, t3.cellphone as t3_cellphone, t3.avatar as t3_avatar
       from article_like t1
       left join article t2 on t1.article_id = t2.id
       left join user t3 on t1.user_id = t3.id
       <where>
         <if test="articleId != null">
             and t1.article_id = #{articleId}
         </if>
         <if test="userId != null">
             and t1.user_id = #{userId}
         </if>
           <if test="title != null and title != ''">
               and t2.title like concat('%', #{title}, '%')
           </if>
       </where>
       order by t1.id desc
       limit #{page}, #{limit}
    </select>

    <select id="selectCountByPaging" resultType="java.lang.Integer">
       select count(*)
       from article_like t1
        left join article t2 on t1.article_id = t2.id
       <where>
         <if test="articleId != null">
             and t1.article_id = #{articleId}
         </if>
         <if test="userId != null">
             and t1.user_id = #{userId}
         </if>
           <if test="title != null and title != ''">
               and t2.title like concat('%', #{title}, '%')
           </if>
       </where>
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from article_like
        order by id desc
    </select>

    <select id="selectList" resultMap="BaseResultMap" parameterType="com.xbb.entity.ArticleLike">
        select
        <include refid="Base_Column_List" />
        from article_like
        <where>
          <if test="articleId != null">
              and article_id = #{articleId}
          </if>
          <if test="userId != null">
              and user_id = #{userId}
          </if>
        </where>
        order by id desc
    </select>

    <select id="selectListByLimit" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from article_like
        order by ${field} ${sort}
        limit #{limit}
    </select>

    <select id="selectListByField" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from article_like
        where ${field} = ${value}
        order by id desc
    </select>

    <select id="selectOne" resultMap="BaseResultMap" parameterType="com.xbb.entity.ArticleLike">
        select
        <include refid="Base_Column_List" />
        from article_like
        <where>
          <if test="articleId != null">
              and article_id = #{articleId}
          </if>
          <if test="userId != null">
              and user_id = #{userId}
          </if>
        </where>
    </select>

    <select id="selectOneByDetails" parameterType="java.lang.Integer" resultMap="ResultMap">
        select
        t1.*,
       t2.title as t2_title,
        t3.name as t3_name, t3.cellphone as t3_cellphone, t3.avatar as t3_avatar
        from article_like t1
        left join article t2 on t1.article_id = t2.id
        left join user t3 on t1.user_id = t3.id
        where t1.id = #{id}
    </select>

    <select id="selectAllCount" resultType="java.lang.Integer">
        select count(*) from article_like
    </select>

    <select id="selectCount" resultType="java.lang.Integer" parameterType="com.xbb.entity.ArticleLike">
        select count(*)
        from article_like
        <where>
          <if test="articleId != null">
              and article_id = #{articleId}
          </if>
          <if test="userId != null">
              and user_id = #{userId}
          </if>
        </where>
    </select>

    <update id="updateAll">
        update article_like
        <if test="articleId != null">
        set article_id = #{articleId}
        </if>
        <if test="userId != null">
        set user_id = #{userId}
        </if>
    </update>
</mapper>
