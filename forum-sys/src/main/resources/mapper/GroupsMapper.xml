<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xbb.mapper.GroupsMapper">
    <!-- 通用查询映射结果 -->
    <resultMap type="com.xbb.entity.Groups" id="BaseResultMap">
        <result column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="name" property="name"/>
        <result column="label" property="label"/>
        <result column="img" property="img"/>
        <result column="content" property="content"/>
        <result column="creat_time" property="creatTime"/>
        <result column="status" property="status"/>
        <result column="opinion" property="opinion"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">id, user_id, name, label, img, content, creat_time, status, opinion</sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from groups
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from groups
        where id = #{id}
    </delete>
    <insert id="insert" parameterType="com.xbb.entity.Groups">
        insert into groups (id, user_id, name, label, img, content, creat_time, status, opinion)
        values (#{id}, #{userId}, #{name}, #{label}, #{img}, #{content}, #{creatTime}, #{status}, #{opinion})
    </insert>
    <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.xbb.entity.Groups">
        insert into groups
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="userId != null">user_id,</if>
            <if test="name != null">name,</if>
            <if test="label != null">label,</if>
            <if test="img != null">img,</if>
            <if test="content != null">content,</if>
            <if test="creatTime != null">creat_time,</if>
            <if test="status != null">status,</if>
            <if test="opinion != null">opinion,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="userId != null">#{userId},</if>
            <if test="name != null">#{name},</if>
            <if test="label != null">#{label},</if>
            <if test="img != null">#{img},</if>
            <if test="content != null">#{content},</if>
            <if test="creatTime != null">#{creatTime},</if>
            <if test="status != null">#{status},</if>
            <if test="opinion != null">#{opinion},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xbb.entity.Groups">
        update groups
        <set>
            <if test="id != null">id = #{id},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="name != null">name = #{name},</if>
            <if test="label != null">label = #{label},</if>
            <if test="img != null">img = #{img},</if>
            <if test="content != null">content = #{content},</if>
            <if test="creatTime != null">creat_time = #{creatTime},</if>
            <if test="status != null">status = #{status},</if>
            <if test="opinion != null">opinion = #{opinion},</if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xbb.entity.Groups">
        update groups
        set id = #{id}, user_id = #{userId}, name = #{name}, label = #{label}, img = #{img}, content = #{content}, creat_time = #{creatTime}, status = #{status}, opinion = #{opinion}
        where id = #{id}
    </update>


    <resultMap id="ResultMap" extends="BaseResultMap" type="com.xbb.entity.Groups">
        <association javaType="com.xbb.entity.User" property="user">
            <result column="t2_name" property="name" />
            <result column="t2_cellphone" property="cellphone" />
            <result column="t2_avatar" property="avatar" />
        </association>
    </resultMap>

    <select id="selectListByPaging" resultMap="ResultMap">
       select
       t1.*,
       t2.name as t2_name, t2.cellphone as t2_cellphone, t2.avatar as t2_avatar
       from groups t1
       left join user t2 on t1.user_id = t2.id
       <where>
         <if test="userId != null">
             and t1.user_id = #{userId}
         </if>
         <if test="name != null and name != ''">
             and t1.name like concat('%', #{name}, '%')
         </if>
         <if test="label != null and label != ''">
             and t1.label like concat('%', #{label}, '%')
         </if>
         <if test="status != null">
             and t1.status = #{status}
         </if>
       </where>
       order by t1.id desc
       limit #{page}, #{limit}
    </select>

    <select id="selectCountByPaging" resultType="java.lang.Integer">
       select count(*)
       from groups t1
       <where>
         <if test="userId != null">
             and t1.user_id = #{userId}
         </if>
         <if test="name != null and name != ''">
             and t1.name like concat('%', #{name}, '%')
         </if>
         <if test="label != null and label != ''">
             and t1.label like concat('%', #{label}, '%')
         </if>
         <if test="status != null">
             and t1.status = #{status}
         </if>
       </where>
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from groups
        order by id desc
    </select>

    <select id="selectList" resultMap="BaseResultMap" parameterType="com.xbb.entity.Groups">
        select
        <include refid="Base_Column_List" />
        from groups
        <where>
          <if test="userId != null">
              and user_id = #{userId}
          </if>
          <if test="name != null and name != ''">
              and name like concat('%', #{name}, '%')
          </if>
          <if test="label != null and label != ''">
              and label like concat('%', #{label}, '%')
          </if>
          <if test="status != null">
              and status = #{status}
          </if>
        </where>
        order by id desc
    </select>

    <select id="selectListByLimit" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from groups
        where status = 1
        order by ${field} ${sort}
        limit #{limit}
    </select>

    <select id="selectListByField" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from groups
        where ${field} = ${value}
        and status = 1
        order by id desc
    </select>

    <select id="selectOne" resultMap="BaseResultMap" parameterType="com.xbb.entity.Groups">
        select
        <include refid="Base_Column_List" />
        from groups
        <where>
          <if test="userId != null">
              and user_id = #{userId}
          </if>
          <if test="name != null and name != ''">
              and name like concat('%', #{name}, '%')
          </if>
          <if test="label != null and label != ''">
              and label like concat('%', #{label}, '%')
          </if>
          <if test="status != null">
              and status = #{status}
          </if>
        </where>
    </select>

    <select id="selectOneByDetails" parameterType="java.lang.Integer" resultMap="ResultMap">
        select
        t1.*,
        t2.name as t2_name, t2.cellphone as t2_cellphone, t2.avatar as t2_avatar
        from groups t1
        left join user t2 on t1.user_id = t2.id
        where t1.id = #{id}
    </select>

    <select id="selectAllCount" resultType="java.lang.Integer">
        select count(*) from groups
    </select>

    <select id="selectCount" resultType="java.lang.Integer" parameterType="com.xbb.entity.Groups">
        select count(*)
        from groups
        <where>
          <if test="userId != null">
              and user_id = #{userId}
          </if>
          <if test="name != null and name != ''">
              and name like concat('%', #{name}, '%')
          </if>
          <if test="label != null and label != ''">
              and label like concat('%', #{label}, '%')
          </if>
          <if test="status != null">
              and status = #{status}
          </if>
        </where>
    </select>

    <update id="updateAll">
        update groups
        <if test="userId != null">
        set user_id = #{userId}
        </if>
        <if test="name != null">
        set name = #{name}
        </if>
        <if test="label != null">
        set label = #{label}
        </if>
        <if test="status != null">
        set status = #{status}
        </if>
    </update>
</mapper>
